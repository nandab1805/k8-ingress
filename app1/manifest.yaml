apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
  labels:
    app: app1
spec:
  # modify replicas according to your case
  replicas: 1
  selector:
    matchLabels: #these labels are used to find the pods
     app: app1
  template: #pod definition
    metadata:
      labels: #these labels are pods labels
        app: app1
    spec:
      containers:
      - name: app1
        image: nanda1805/app1:v1
        imagePullPolicy: Always #Always, IfNotPresent, Never it will pull the image from the docker hub
        resources:
          requests:
            cpu: "50m"
            memory: "128Mi"
          limits:
            cpu: "100m"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: app1
spec:
  selector:
    app: app1
  ports:
    - protocol: TCP
      port: 80 # Service Port
      targetPort: 80 # container Port
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app1
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/tags: Envinorment=dev,Team=test,Project=Roboshop
    alb.ingress.kubernetes.io/group.name: nanda1805
spec:
  ingressClassName: alb
  rules:
  - host: "app1.nanda.cfd"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: app1
            port:
              number: 80


